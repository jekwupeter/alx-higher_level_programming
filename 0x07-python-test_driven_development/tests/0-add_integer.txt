==============================
The "0-add_integer.py" module
==============================
"""
A module that defines the test cases for a integer addition function
The sum function module supplies one function add_integer(a,b=98)
"""
Import the function:
    >>> add_integer = __import__('0-add_integer').add_integer

Check documentation:
    >>> module_docs = __import__("0-add_integer").__doc__
    >>> print(len(module_docs) > 0)
    True

    >>> function_docs = __import__("0-add_integer").add_integer.__doc__
    >>> print(len(function_docs) > 0)
    True

Test function:
    >>> add_integer(1, 2)
    3

    >>> add_integer(3, -5)
    -2

    >>> add_integer(5, 4.5)
    9

    >>> add_integer(3.5, 1)
    4

Check Errors:
    >>> add_integer(, 1)
    Traceback (most recent call last):
    SyntaxError: invalid syntax

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(None, 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(4.5, "Hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(4.5, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(4.5, 1009E308)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
